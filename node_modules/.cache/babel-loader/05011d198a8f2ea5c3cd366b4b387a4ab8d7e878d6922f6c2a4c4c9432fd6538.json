{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactFlow\\\\my-app\\\\src\\\\CustomNode3\\\\Demo4.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nimport ReactFlow, { addEdge, applyEdgeChanges, applyNodeChanges } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport TextUpdaterNode from './TextUpdaterNode.js';\nimport './text-updater-node.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rfStyle = {\n  backgroundColor: '#B8CEFF'\n};\nconst initialNodes = [{\n  id: 'node-1',\n  type: 'textUpdater',\n  position: {\n    x: 0,\n    y: 0\n  },\n  data: {\n    value: 123\n  }\n}, {\n  id: 'node-2',\n  type: 'output',\n  targetPosition: 'top',\n  position: {\n    x: 0,\n    y: 200\n  },\n  data: {\n    label: 'node 2'\n  }\n}, {\n  id: 'node-3',\n  type: 'output',\n  targetPosition: 'top',\n  position: {\n    x: 200,\n    y: 200\n  },\n  data: {\n    label: 'node 3'\n  }\n}];\nconst initialEdges = [{\n  id: 'edge-1',\n  source: 'node-1',\n  target: 'node-2',\n  sourceHandle: 'a'\n}, {\n  id: 'edge-2',\n  source: 'node-1',\n  target: 'node-3',\n  sourceHandle: 'b'\n}];\n\n// we define the nodeTypes outside of the component to prevent re-renderings\n// you could also use useMemo inside the component\nconst nodeTypes = {\n  textUpdater: TextUpdaterNode\n};\nfunction Demo4() {\n  _s();\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const onNodesChange = useCallback(changes => setNodes(nds => applyNodeChanges(changes, nds)), [setNodes]);\n  const onEdgesChange = useCallback(changes => setEdges(eds => applyEdgeChanges(changes, eds)), [setEdges]);\n  const onConnect = useCallback(connection => setEdges(eds => addEdge(connection, eds)), [setEdges]);\n  return /*#__PURE__*/_jsxDEV(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect,\n    nodeTypes: nodeTypes,\n    fitView: true,\n    style: rfStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Demo4, \"QpOJLU91VwfpESukmr0SDfSF2nU=\");\n_c = Demo4;\nexport default Demo4;\nvar _c;\n$RefreshReg$(_c, \"Demo4\");","map":{"version":3,"names":["useCallback","useState","ReactFlow","addEdge","applyEdgeChanges","applyNodeChanges","TextUpdaterNode","rfStyle","backgroundColor","initialNodes","id","type","position","x","y","data","value","targetPosition","label","initialEdges","source","target","sourceHandle","nodeTypes","textUpdater","Demo4","nodes","setNodes","edges","setEdges","onNodesChange","changes","nds","onEdgesChange","eds","onConnect","connection"],"sources":["D:/ReactFlow/my-app/src/CustomNode3/Demo4.jsx"],"sourcesContent":["import { useCallback, useState } from 'react';\r\nimport ReactFlow, { addEdge, applyEdgeChanges, applyNodeChanges } from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\nimport TextUpdaterNode from './TextUpdaterNode.js';\r\n\r\nimport './text-updater-node.css';\r\n\r\nconst rfStyle = {\r\n  backgroundColor: '#B8CEFF',\r\n};\r\n\r\nconst initialNodes = [\r\n  { id: 'node-1', type: 'textUpdater', position: { x: 0, y: 0 }, data: { value: 123 } },\r\n  {\r\n    id: 'node-2',\r\n    type: 'output',\r\n    targetPosition: 'top',\r\n    position: { x: 0, y: 200 },\r\n    data: { label: 'node 2' },\r\n  },\r\n  {\r\n    id: 'node-3',\r\n    type: 'output',\r\n    targetPosition: 'top',\r\n    position: { x: 200, y: 200 },\r\n    data: { label: 'node 3' },\r\n  },\r\n];\r\n\r\nconst initialEdges = [\r\n  { id: 'edge-1', source: 'node-1', target: 'node-2', sourceHandle: 'a' },\r\n  { id: 'edge-2', source: 'node-1', target: 'node-3', sourceHandle: 'b' },\r\n];\r\n\r\n// we define the nodeTypes outside of the component to prevent re-renderings\r\n// you could also use useMemo inside the component\r\nconst nodeTypes = { textUpdater: TextUpdaterNode };\r\n\r\nfunction Demo4() {\r\n  const [nodes, setNodes] = useState(initialNodes);\r\n  const [edges, setEdges] = useState(initialEdges);\r\n\r\n  const onNodesChange = useCallback(\r\n    (changes) => setNodes((nds) => applyNodeChanges(changes, nds)),\r\n    [setNodes]\r\n  );\r\n  const onEdgesChange = useCallback(\r\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\r\n    [setEdges]\r\n  );\r\n  const onConnect = useCallback(\r\n    (connection) => setEdges((eds) => addEdge(connection, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  return (\r\n    <ReactFlow\r\n      nodes={nodes}\r\n      edges={edges}\r\n      onNodesChange={onNodesChange}\r\n      onEdgesChange={onEdgesChange}\r\n      onConnect={onConnect}\r\n      nodeTypes={nodeTypes}\r\n      fitView\r\n      style={rfStyle}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Demo4;\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,OAAOC,SAAS,IAAIC,OAAO,EAAEC,gBAAgB,EAAEC,gBAAgB,QAAQ,WAAW;AAClF,OAAO,0BAA0B;AAEjC,OAAOC,eAAe,MAAM,sBAAsB;AAElD,OAAO,yBAAyB;AAAC;AAEjC,MAAMC,OAAO,GAAG;EACdC,eAAe,EAAE;AACnB,CAAC;AAED,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,QAAQ;EAAEC,IAAI,EAAE,aAAa;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC;EAAEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAI;AAAE,CAAC,EACrF;EACEN,EAAE,EAAE,QAAQ;EACZC,IAAI,EAAE,QAAQ;EACdM,cAAc,EAAE,KAAK;EACrBL,QAAQ,EAAE;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAI,CAAC;EAC1BC,IAAI,EAAE;IAAEG,KAAK,EAAE;EAAS;AAC1B,CAAC,EACD;EACER,EAAE,EAAE,QAAQ;EACZC,IAAI,EAAE,QAAQ;EACdM,cAAc,EAAE,KAAK;EACrBL,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAC5BC,IAAI,EAAE;IAAEG,KAAK,EAAE;EAAS;AAC1B,CAAC,CACF;AAED,MAAMC,YAAY,GAAG,CACnB;EAAET,EAAE,EAAE,QAAQ;EAAEU,MAAM,EAAE,QAAQ;EAAEC,MAAM,EAAE,QAAQ;EAAEC,YAAY,EAAE;AAAI,CAAC,EACvE;EAAEZ,EAAE,EAAE,QAAQ;EAAEU,MAAM,EAAE,QAAQ;EAAEC,MAAM,EAAE,QAAQ;EAAEC,YAAY,EAAE;AAAI,CAAC,CACxE;;AAED;AACA;AACA,MAAMC,SAAS,GAAG;EAAEC,WAAW,EAAElB;AAAgB,CAAC;AAElD,SAASmB,KAAK,GAAG;EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAACQ,YAAY,CAAC;EAChD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAACkB,YAAY,CAAC;EAEhD,MAAMW,aAAa,GAAG9B,WAAW,CAC9B+B,OAAO,IAAKJ,QAAQ,CAAEK,GAAG,IAAK3B,gBAAgB,CAAC0B,OAAO,EAAEC,GAAG,CAAC,CAAC,EAC9D,CAACL,QAAQ,CAAC,CACX;EACD,MAAMM,aAAa,GAAGjC,WAAW,CAC9B+B,OAAO,IAAKF,QAAQ,CAAEK,GAAG,IAAK9B,gBAAgB,CAAC2B,OAAO,EAAEG,GAAG,CAAC,CAAC,EAC9D,CAACL,QAAQ,CAAC,CACX;EACD,MAAMM,SAAS,GAAGnC,WAAW,CAC1BoC,UAAU,IAAKP,QAAQ,CAAEK,GAAG,IAAK/B,OAAO,CAACiC,UAAU,EAAEF,GAAG,CAAC,CAAC,EAC3D,CAACL,QAAQ,CAAC,CACX;EAED,oBACE,QAAC,SAAS;IACR,KAAK,EAAEH,KAAM;IACb,KAAK,EAAEE,KAAM;IACb,aAAa,EAAEE,aAAc;IAC7B,aAAa,EAAEG,aAAc;IAC7B,SAAS,EAAEE,SAAU;IACrB,SAAS,EAAEZ,SAAU;IACrB,OAAO;IACP,KAAK,EAAEhB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACf;AAEN;AAAC,GA7BQkB,KAAK;AAAA,KAALA,KAAK;AA+Bd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}