{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactFlow\\\\my-app\\\\src\\\\DragandDrop\\\\DnDFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport Sidebar from './Sidebar';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [];\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\nconst DnDFlow = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: `${type} node`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n\n  //1\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updatenode__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"label:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: nodes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          fitView: true,\n          children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(DnDFlow, \"s1hu1oC/LcvmYaDaAbQjcY1Q9fQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = DnDFlow;\nexport default DnDFlow;\nvar _c;\n$RefreshReg$(_c, \"DnDFlow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","Sidebar","initialNodes","id","getId","DnDFlow","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","type","getData","position","project","x","clientX","left","y","clientY","top","newNode","data","label","nds","concat"],"sources":["D:/ReactFlow/my-app/src/DragandDrop/DnDFlow.js"],"sourcesContent":["import React, { useState,useEffect, useRef, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\nimport Sidebar from './Sidebar';\r\n\r\nimport './style.css';\r\n\r\nconst initialNodes = [];\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst DnDFlow = () => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n \r\n\r\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n    \r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n      if (typeof type === 'undefined' || !type) {\r\n        return;\r\n      }\r\n      \r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n      const newNode = {\r\n        id: getId(),\r\n        type,\r\n        position,\r\n        data: { label: `${type} node` },\r\n        \r\n        \r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n //1\r\n \r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n      <div className=\"updatenode__controls\">\r\n        <label >label:</label>\r\n        <input value={nodes} />\r\n       \r\n        </div>\r\n        \r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            nodes={nodes}\r\n            edges={edges}\r\n            onNodesChange={onNodesChange}\r\n            onEdgesChange={onEdgesChange}\r\n            onConnect={onConnect}\r\n            onInit={setReactFlowInstance}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            fitView\r\n          >\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n        <Sidebar />\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DnDFlow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}