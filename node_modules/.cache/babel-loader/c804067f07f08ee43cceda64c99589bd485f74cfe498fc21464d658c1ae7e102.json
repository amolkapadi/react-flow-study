{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactFlow\\\\my-app\\\\src\\\\UpdateNode\\\\DemoUpdate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport ReactFlow, { useNodesState, addEdge, applyNodeChanges, applyEdgeChanges } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport './updatenode.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  data: {\n    label: 'Node 1'\n  },\n  position: {\n    x: 100,\n    y: 100\n  }\n}, {\n  id: '2',\n  data: {\n    label: 'Node 2'\n  },\n  position: {\n    x: 100,\n    y: 200\n  }\n}];\nconst initialEdges = [];\nconst DemoUpdate = () => {\n  _s();\n  const [nodes, setNodes] = useNodesState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [nodeName, setNodeName] = useState('node 1');\n  const [nodeNames, setNodeNames] = useState('node 2');\n  useEffect(() => {\n    setNodes(nds => nds.map(node => {\n      if (node.id === '1') {\n        node.data = {\n          ...node.data,\n          label: nodeName\n        };\n      }\n      return node;\n    }));\n  }, [nodeName, setNodes]);\n  useEffect(() => {\n    setNodes(nds => nds.map(node => {\n      if (node.id === '2') {\n        node.data = {\n          ...node.data,\n          label: nodeNames\n        };\n      }\n      return node;\n    }));\n  }, [nodeNames, setNodes]);\n  const onNodesChange = useCallback(changes => setNodes(nds => applyNodeChanges(changes, nds)), []);\n  const onEdgesChange = useCallback(changes => setEdges(eds => applyEdgeChanges(changes, eds)), []);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const onNodeClick = node => {\n    console.log(node);\n  };\n  return /*#__PURE__*/_jsxDEV(ReactFlow, {\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    nodes: nodes,\n    onNodeClick: onNodeClick,\n    minZoom: 0.2,\n    edges: edges,\n    maxZoom: 4,\n    onConnect: onConnect,\n    attributionPosition: \"bottom-left\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updatenode__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"label:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nodeName,\n        onChange: evt => setNodeName(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"label:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nodeNames,\n        onChange: evt => setNodeNames(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(DemoUpdate, \"lP0oqIbiKz33iyTRFGgG4t4fqyI=\", false, function () {\n  return [useNodesState];\n});\n_c = DemoUpdate;\nexport default DemoUpdate;\nvar _c;\n$RefreshReg$(_c, \"DemoUpdate\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","ReactFlow","useNodesState","addEdge","applyNodeChanges","applyEdgeChanges","initialNodes","id","data","label","position","x","y","initialEdges","DemoUpdate","nodes","setNodes","edges","setEdges","nodeName","setNodeName","nodeNames","setNodeNames","nds","map","node","onNodesChange","changes","onEdgesChange","eds","onConnect","params","onNodeClick","console","log","evt","target","value"],"sources":["D:/ReactFlow/my-app/src/UpdateNode/DemoUpdate.jsx"],"sourcesContent":["import React, { useEffect, useState ,useCallback} from 'react';\r\nimport ReactFlow, { useNodesState, addEdge ,\r\n  applyNodeChanges,\r\n  applyEdgeChanges, } from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\nimport './updatenode.css';\r\n\r\nconst initialNodes = [\r\n  { id: '1', data: { label: 'Node 1' }, position: { x: 100, y: 100 } },\r\n  { id: '2', data: { label: 'Node 2' }, position: { x: 100, y: 200 } },\r\n];\r\nconst initialEdges = [];\r\n\r\nconst DemoUpdate = () => {\r\n  const [nodes, setNodes] = useNodesState(initialNodes);\r\n  const [edges, setEdges] = useState(initialEdges);\r\n  const [nodeName, setNodeName] = useState('node 1');\r\n  const [nodeNames,setNodeNames]=useState('node 2')\r\n\r\n  useEffect(() => {\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === '1') {\r\n         \r\n          node.data = {\r\n            ...node.data,\r\n            label: nodeName,\r\n          };\r\n        }\r\n        return node;\r\n      })\r\n    );\r\n  }, [nodeName, setNodes]);\r\n\r\n  useEffect(() => {\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === '2') {\r\n         \r\n          node.data = {\r\n            ...node.data,\r\n            label: nodeNames,\r\n          };\r\n        }\r\n\r\n        return node;\r\n      })\r\n    );\r\n  }, [nodeNames, setNodes]);\r\n\r\n  \r\n  const onNodesChange = useCallback(\r\n    (changes) => setNodes((nds) => applyNodeChanges(changes, nds)),\r\n    []\r\n  );\r\n  const onEdgesChange = useCallback(\r\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\r\n    []\r\n  );\r\n  \r\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\r\n  \r\n  const onNodeClick = (node) => {\r\n    console.log(node)\r\n  }\r\n  return (\r\n    <ReactFlow\r\n    onNodesChange={onNodesChange}\r\n    onEdgesChange={onEdgesChange}\r\n     nodes={nodes}\r\n     onNodeClick={onNodeClick}\r\n      minZoom={0.2}\r\n      edges={edges}\r\n      maxZoom={4}\r\n      onConnect={onConnect}\r\n      attributionPosition=\"bottom-left\"\r\n    >\r\n      <div className=\"updatenode__controls\">\r\n        <label>label:</label>\r\n        <input value={nodeName} onChange={(evt) => setNodeName(evt.target.value)} />\r\n        <br /><br />\r\n        <label>label:</label>\r\n        <input value={nodeNames} onChange={(evt) => setNodeNames(evt.target.value)} />\r\n\r\n     \r\n      </div>\r\n    </ReactFlow>\r\n  );\r\n};\r\n\r\nexport default DemoUpdate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}