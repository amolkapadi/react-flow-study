{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactFlow\\\\my-app\\\\src\\\\UpdateNode\\\\DemoUpdate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport './updatenode.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  data: {\n    label: '-'\n  },\n  position: {\n    x: 100,\n    y: 100\n  }\n}, {\n  id: '2',\n  data: {\n    label: '-'\n  },\n  position: {\n    x: 100,\n    y: 200\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2'\n}];\nconst DemoUpdate = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [nodeName, setNodeName] = useState('Node 1');\n  const [nodeNames, setNodeNames] = useState('node 2');\n  useEffect(() => {\n    setNodes(nds => nds.map(node => {\n      if (node.id === '1') {\n        node.data = {\n          ...node.data,\n          label: nodeName\n        };\n      }\n      return node;\n    }));\n  }, [nodeName, setNodes]);\n  return /*#__PURE__*/_jsxDEV(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    minZoom: 0.2,\n    maxZoom: 4,\n    attributionPosition: \"bottom-left\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updatenode__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"label:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nodeName,\n        onChange: evt => setNodeName(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(DemoUpdate, \"JD2qX/3Xri2EpOkIGgiRZMvo2sU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = DemoUpdate;\nexport default DemoUpdate;\nvar _c;\n$RefreshReg$(_c, \"DemoUpdate\");","map":{"version":3,"names":["React","useEffect","useState","ReactFlow","useNodesState","useEdgesState","initialNodes","id","data","label","position","x","y","initialEdges","source","target","DemoUpdate","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeName","setNodeName","nodeNames","setNodeNames","nds","map","node","evt","value"],"sources":["D:/ReactFlow/my-app/src/UpdateNode/DemoUpdate.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactFlow, { useNodesState, useEdgesState } from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\nimport './updatenode.css';\r\n\r\nconst initialNodes = [\r\n  { id: '1', data: { label: '-' }, position: { x: 100, y: 100 } },\r\n  { id: '2', data: { label: '-' }, position: { x: 100, y: 200 } },\r\n];\r\n\r\nconst initialEdges = [{ id: 'e1-2', source: '1', target: '2' }];\r\n\r\nconst DemoUpdate = () => {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n\r\n  const [nodeName, setNodeName] = useState('Node 1');\r\n  const [nodeNames,setNodeNames]=useState('node 2')\r\n\r\n  useEffect(() => {\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === '1') {\r\n         \r\n          node.data = {\r\n            ...node.data,\r\n            label: nodeName,\r\n          };\r\n        }\r\n\r\n        return node;\r\n      })\r\n    );\r\n  }, [nodeName, setNodes]);\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <ReactFlow\r\n      nodes={nodes}\r\n      edges={edges}\r\n      onNodesChange={onNodesChange}\r\n      onEdgesChange={onEdgesChange}\r\n      minZoom={0.2}\r\n      maxZoom={4}\r\n      attributionPosition=\"bottom-left\"\r\n    >\r\n      <div className=\"updatenode__controls\">\r\n        <label>label:</label>\r\n        <input value={nodeName} onChange={(evt) => setNodeName(evt.target.value)} />\r\n\r\n     \r\n      </div>\r\n    </ReactFlow>\r\n  );\r\n};\r\n\r\nexport default DemoUpdate;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,IAAIC,aAAa,EAAEC,aAAa,QAAQ,WAAW;AACnE,OAAO,0BAA0B;AAEjC,OAAO,kBAAkB;AAAC;AAE1B,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAI,CAAC;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI;AAAE,CAAC,EAC/D;EAAEL,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAI,CAAC;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI;AAAE,CAAC,CAChE;AAED,MAAMC,YAAY,GAAG,CAAC;EAAEN,EAAE,EAAE,MAAM;EAAEO,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAI,CAAC,CAAC;AAE/D,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGf,aAAa,CAACE,YAAY,CAAC;EACpE,MAAM,CAACc,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGjB,aAAa,CAACQ,YAAY,CAAC;EAEpE,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,QAAQ,CAAC;EAClD,MAAM,CAACuB,SAAS,EAACC,YAAY,CAAC,GAACxB,QAAQ,CAAC,QAAQ,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACdiB,QAAQ,CAAES,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,IAAI,IAAK;MAChB,IAAIA,IAAI,CAACtB,EAAE,KAAK,GAAG,EAAE;QAEnBsB,IAAI,CAACrB,IAAI,GAAG;UACV,GAAGqB,IAAI,CAACrB,IAAI;UACZC,KAAK,EAAEc;QACT,CAAC;MACH;MAEA,OAAOM,IAAI;IACb,CAAC,CAAC,CACH;EACH,CAAC,EAAE,CAACN,QAAQ,EAAEL,QAAQ,CAAC,CAAC;EAKxB,oBACE,QAAC,SAAS;IACR,KAAK,EAAED,KAAM;IACb,KAAK,EAAEG,KAAM;IACb,aAAa,EAAED,aAAc;IAC7B,aAAa,EAAEG,aAAc;IAC7B,OAAO,EAAE,GAAI;IACb,OAAO,EAAE,CAAE;IACX,mBAAmB,EAAC,aAAa;IAAA,uBAEjC;MAAK,SAAS,EAAC,sBAAsB;MAAA,wBACnC;QAAA,UAAO;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrB;QAAO,KAAK,EAAEC,QAAS;QAAC,QAAQ,EAAGO,GAAG,IAAKN,WAAW,CAACM,GAAG,CAACf,MAAM,CAACgB,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAGxE;IAAA;IAAA;IAAA;EAAA,QACI;AAEhB,CAAC;AAAC,GA5CIf,UAAU;EAAA,QAC2BZ,aAAa,EACbC,aAAa;AAAA;AAAA,KAFlDW,UAAU;AA8ChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}