{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactFlow\\\\my-app\\\\src\\\\DragandDrop\\\\DnDFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport ReactFlow, { ReactFlowProvider, addEdge, removeElements, Controls } from \"reactflow\";\nimport Sidebar from \"./Sidebar\";\nimport \"./dnd.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialElements = [{\n  id: \"1\",\n  type: \"input\",\n  data: {\n    label: \"alpha\"\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\nconst DnDFlow = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [elements, setElements] = useState(initialElements);\n  const onConnect = params => setElements(els => addEdge(params, els));\n  const onElementsRemove = elementsToRemove => setElements(els => removeElements(elementsToRemove, els));\n  const onLoad = _reactFlowInstance => setReactFlowInstance(_reactFlowInstance);\n  const onDragOver = event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n  };\n  const onDrop = event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData(\"application/reactflow\");\n    const label = event.dataTransfer.getData(\"label\");\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: label\n      }\n    };\n    setElements(es => es.concat(newNode));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          elements: elements,\n          onConnect: onConnect,\n          onElementsRemove: onElementsRemove,\n          onLoad: onLoad,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(DnDFlow, \"t0Pmcgj3+nKbdYNPuwo8wbQmUCM=\");\n_c = DnDFlow;\nexport default DnDFlow;\nvar _c;\n$RefreshReg$(_c, \"DnDFlow\");","map":{"version":3,"names":["React","useState","useRef","ReactFlow","ReactFlowProvider","addEdge","removeElements","Controls","Sidebar","initialElements","id","type","data","label","position","x","y","getId","DnDFlow","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","elements","setElements","onConnect","params","els","onElementsRemove","elementsToRemove","onLoad","_reactFlowInstance","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","es","concat"],"sources":["D:/ReactFlow/my-app/src/DragandDrop/DnDFlow.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  removeElements,\r\n  Controls\r\n} from \"reactflow\";\r\n\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nimport \"./dnd.css\";\r\n\r\nconst initialElements = [\r\n  {\r\n    id: \"1\",\r\n    type: \"input\",\r\n    data: { label: \"alpha\" },\r\n    position: { x: 250, y: 5 }\r\n  }\r\n];\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst DnDFlow = () => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData(\"application/reactflow\");\r\n    const label = event.dataTransfer.getData(\"label\");\r\n\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top\r\n    });\r\n    const newNode = {\r\n      id: getId(),\r\n      type,\r\n      position,\r\n      data: { label: label }\r\n    };\r\n\r\n    setElements((es) => es.concat(newNode));\r\n  };\r\n\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            elements={elements}\r\n            onConnect={onConnect}\r\n            onElementsRemove={onElementsRemove}\r\n            onLoad={onLoad}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n          >\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n        <Sidebar />\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DnDFlow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}