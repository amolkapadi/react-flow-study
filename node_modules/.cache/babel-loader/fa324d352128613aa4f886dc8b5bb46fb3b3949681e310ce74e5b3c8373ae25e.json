{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactFlow\\\\my-app\\\\src\\\\Reactflow\\\\DnDFlowPro.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, ConnectionMode, Controls } from 'reactflow';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport 'reactflow/dist/style.css';\nimport Sidebar from './Sidebar';\nimport ShapeNode from './ShapeNode';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  shape: ShapeNode\n};\nconst handleStyle = {\n  opacity: \"10px \"\n};\nexport const defaultNodes = [{\n  id: '1',\n  type: 'shape',\n  position: {\n    x: 0,\n    y: 0\n  },\n  data: {\n    shape: 'round-rect',\n    width: 150,\n    height: 50,\n    label: 'Round Rectangle',\n    color: '#668de3'\n  }\n}, {\n  id: '2',\n  type: 'shape',\n  position: {\n    x: 25,\n    y: 120\n  },\n  data: {\n    shape: 'diamond',\n    width: 100,\n    height: 100,\n    label: 'Diamond',\n    color: '#ff6700'\n  }\n}, {\n  id: '3',\n  type: 'shape',\n  position: {\n    x: -150,\n    y: 135\n  },\n  data: {\n    shape: 'circle',\n    width: 70,\n    height: 70,\n    label: 'Circle',\n    color: '#6ede87'\n  }\n}, {\n  id: '4',\n  type: 'shape',\n  position: {\n    x: 220,\n    y: 145\n  },\n  data: {\n    shape: 'circle',\n    width: 150,\n    height: 50,\n    label: 'Ellipse',\n    color: '#ff0072'\n  }\n}, {\n  id: '5',\n  type: 'shape',\n  position: {\n    x: 380,\n    y: 280\n  },\n  data: {\n    shape: 'hexagon',\n    width: 120,\n    height: 60,\n    label: 'Hexagon',\n    color: '#00d7ca'\n  }\n}, {\n  id: '6',\n  type: 'shape',\n  position: {\n    x: -250,\n    y: 310\n  },\n  data: {\n    shape: 'arrow-rect',\n    width: 130,\n    height: 50,\n    label: 'Arrow Rectangle',\n    color: '#784be8'\n  }\n}\n// {\n//   id: '7',\n//   type: 'shape',\n//   position: { x: 15, y: 350 },\n//   data: { shape: 'database', width: 100, height: 80, label: 'Database', color: '#9ca8b3' },\n// },\n// {\n//   id: '8',\n//   type: 'shape',\n//   position: { x: 15, y: 500 },\n//   data: {\n//     shape: 'triangle',\n//     width: 100,\n//     height: 70,\n//     label: <div style={{ marginTop: 30 }}>Triangle</div>,\n//     color: '#ff6700',\n//   },\n// },\n// {\n//   id: '9',\n//   type: 'shape',\n//   position: { x: 200, y: 390 },\n//   data: { shape: 'parallelogram', width: 150, height: 70, label: 'Parallelogram', color: '#668de3' },\n// },\n];\n\nconst defaultEdges = [];\n\n// const initialNodes = [\n\n// ];\n\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\nconst DnDFlowPro = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(defaultNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  //offcanvas\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  //update Node \n  const [editValue, setEditValue] = useState(nodes.data);\n  const [id, setId] = useState();\n\n  //edit function\n  const onNodeClick = (e, val) => {\n    setEditValue(val.data.label);\n    setId(val.id);\n    setShow(true);\n  };\n  //handle Change\n  const handleChange = e => {\n    e.preventDefault();\n    setEditValue(e.target.value);\n  };\n  //handle Function\n  const handleEdit = () => {\n    const res = nodes.map(item => {\n      if (item.id === id) {\n        item.data = {\n          ...item.data,\n          label: editValue\n        };\n      }\n      return item;\n    });\n    setNodes(res);\n    setEditValue('');\n    setShow(true);\n  };\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n\n    // check if the dropped element is valid\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: `${type} `\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: [/*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      placement: \"end\",\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Update Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"label:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: editValue,\n            onChange: e => setEditValue(e.target.value),\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 114\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEdit,\n            className: \"btn-update\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodeClick: (e, val) => onNodeClick(e, val),\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          nodeTypes: nodeTypes,\n          connectionMode: ConnectionMode.Loose,\n          onInit: setReactFlowInstance,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          fitView: true,\n          children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(DnDFlowPro, \"d35Ngd2nycbx3Pi/xrmjjyfSNxg=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = DnDFlowPro;\nexport default DnDFlowPro;\nvar _c;\n$RefreshReg$(_c, \"DnDFlowPro\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","ConnectionMode","Controls","Offcanvas","Sidebar","ShapeNode","nodeTypes","shape","handleStyle","opacity","defaultNodes","id","type","position","x","y","data","width","height","label","color","defaultEdges","getId","DnDFlowPro","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","show","setShow","handleClose","handleShow","editValue","setEditValue","setId","onNodeClick","e","val","handleChange","preventDefault","target","value","handleEdit","res","map","item","onConnect","params","eds","onDragOver","event","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","nds","concat","Loose"],"sources":["D:/ReactFlow/my-app/src/Reactflow/DnDFlowPro.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  ConnectionMode,\r\n  Controls,\r\n} from 'reactflow';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport 'reactflow/dist/style.css';\r\n\r\nimport Sidebar from './Sidebar';\r\n\r\nimport ShapeNode from './ShapeNode';\r\n\r\n\r\nimport './style.css';\r\n\r\n\r\nconst nodeTypes = {\r\n  shape: ShapeNode,\r\n};\r\nconst handleStyle = { opacity: \"10px \"};\r\n\r\nexport const defaultNodes: Node[] = [\r\n  {\r\n    id: '1',\r\n    type: 'shape',\r\n    position: { x: 0, y: 0 },\r\n    data: { shape: 'round-rect', width: 150, height: 50, label: 'Round Rectangle', color: '#668de3' },\r\n  },\r\n  {\r\n    id: '2',\r\n    type: 'shape',\r\n    position: { x: 25, y: 120 },\r\n    data: { shape: 'diamond', width: 100, height: 100, label: 'Diamond', color: '#ff6700' },\r\n  },\r\n  {\r\n    id: '3',\r\n    type: 'shape',\r\n    position: { x: -150, y: 135 },\r\n    data: { shape: 'circle', width: 70, height: 70, label: 'Circle', color: '#6ede87' },\r\n  },\r\n  {\r\n    id: '4',\r\n    type: 'shape',\r\n    position: { x: 220, y: 145 },\r\n    data: { shape: 'circle', width: 150, height: 50, label: 'Ellipse', color: '#ff0072' },\r\n  },\r\n  {\r\n    id: '5',\r\n    type: 'shape',\r\n    position: { x: 380, y: 280 },\r\n    data: { shape: 'hexagon', width: 120, height: 60, label: 'Hexagon', color: '#00d7ca' },\r\n  },\r\n  {\r\n    id: '6',\r\n    type: 'shape',\r\n    position: { x: -250, y: 310 },\r\n    data: { shape: 'arrow-rect', width: 130, height: 50, label: 'Arrow Rectangle', color: '#784be8' },\r\n  },\r\n  // {\r\n  //   id: '7',\r\n  //   type: 'shape',\r\n  //   position: { x: 15, y: 350 },\r\n  //   data: { shape: 'database', width: 100, height: 80, label: 'Database', color: '#9ca8b3' },\r\n  // },\r\n  // {\r\n  //   id: '8',\r\n  //   type: 'shape',\r\n  //   position: { x: 15, y: 500 },\r\n  //   data: {\r\n  //     shape: 'triangle',\r\n  //     width: 100,\r\n  //     height: 70,\r\n  //     label: <div style={{ marginTop: 30 }}>Triangle</div>,\r\n  //     color: '#ff6700',\r\n  //   },\r\n  // },\r\n  // {\r\n  //   id: '9',\r\n  //   type: 'shape',\r\n  //   position: { x: 200, y: 390 },\r\n  //   data: { shape: 'parallelogram', width: 150, height: 70, label: 'Parallelogram', color: '#668de3' },\r\n  // },\r\n];\r\n\r\nconst defaultEdges: Edge[] = [\r\n \r\n];\r\n\r\n// const initialNodes = [\r\n \r\n// ];\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst DnDFlowPro = () => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(defaultNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\r\n  //offcanvas\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //update Node \r\n  const [editValue, setEditValue] = useState(nodes.data)\r\n  const [id, setId] = useState()\r\n\r\n  //edit function\r\n  const onNodeClick = (e, val) => {\r\n    setEditValue(val.data.label)\r\n    setId(val.id)\r\n    setShow(true)\r\n\r\n  }\r\n  //handle Change\r\n  const handleChange=(e)=>{\r\n      e.preventDefault();\r\n    setEditValue( e.target.value);\r\n  }\r\n  //handle Function\r\n  const handleEdit =()=>{\r\n    const res=nodes.map((item)=>{\r\n      if(item.id===id){\r\n        item.data={\r\n          ...item.data,\r\n          label:editValue\r\n        }\r\n      }\r\n      return item\r\n    })\r\n    setNodes(res)\r\n    setEditValue('')\r\n    setShow(true)\r\n  }\r\n\r\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n      // check if the dropped element is valid\r\n      if (typeof type === 'undefined' || !type) {\r\n        return;\r\n      }\r\n\r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n      const newNode = {\r\n        id: getId(),\r\n        type,\r\n        position,\r\n        data: { label: `${type} ` },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  return (\r\n    <div className=\"dndflow\">\r\n    <Offcanvas show={show} onHide={handleClose} placement='end' >\r\n        <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title>Update Node</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n\r\n            <div >\r\n                <label>label:</label><br />\r\n                <input value={editValue} onChange={(e) => setEditValue(e.target.value)} className=\"input-box\" /> <br />\r\n                <button onClick={handleEdit} className=\"btn-update\">Update</button>\r\n            </div>\r\n\r\n        </Offcanvas.Body>\r\n    </Offcanvas>\r\n    <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n            <ReactFlow\r\n                nodes={nodes}\r\n                edges={edges}\r\n                onNodeClick={(e, val) => onNodeClick(e, val)}\r\n                onNodesChange={onNodesChange}\r\n                onEdgesChange={onEdgesChange}\r\n                onConnect={onConnect}\r\n                nodeTypes={nodeTypes}\r\n                connectionMode={ConnectionMode.Loose}\r\n                onInit={setReactFlowInstance}\r\n                onDrop={onDrop}\r\n                onDragOver={onDragOver}\r\n                fitView\r\n            >\r\n                <Controls />\r\n            </ReactFlow>\r\n        </div>\r\n        <Sidebar />\r\n    </ReactFlowProvider>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default DnDFlowPro;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}